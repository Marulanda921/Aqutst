services:
 zookeeper:
   image: confluentinc/cp-zookeeper:latest
   container_name: zookeeper
   environment:
     ZOOKEEPER_CLIENT_PORT: "2181"
     ZOOKEEPER_TICK_TIME: 2000
   ports:
     - "${ZOOKEEPER_PORT}:2181"
   networks:
     - mynetwork
 kafka:
   image: confluentinc/cp-kafka:latest
   container_name: kafka
   depends_on:
     - zookeeper
   ports:
     - "${KAFKA_INSIDE_PORT}:9092"
     - "${KAFKA_OUTSIDE_PORT}:9093"
   environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:${KAFKA_INSIDE_PORT},OUTSIDE://localhost:${KAFKA_OUTSIDE_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_NAME_INSIDE: INSIDE
      KAFKA_LISTENER_NAME_OUTSIDE: OUTSIDE
      KAFKA_LISTENERS: INSIDE://0.0.0.0:${KAFKA_INSIDE_PORT},OUTSIDE://0.0.0.0:${KAFKA_OUTSIDE_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
   networks:
     - mynetwork
 mongodb:
  image: mongo:latest
  container_name: mongodb
  ports:
    - "2005:27017"
  volumes:
    - mongodb_data:/data/db
  networks:
    - mynetwork

 api:
   build:
     context: .
     dockerfile: Dockerfile
     args:
       - TCP_PORT=${TCP_PORT}
   container_name: tcp-api
   ports:
     - "${TCP_PORT}:8080"
   environment:
     ASPNETCORE_ENVIRONMENT: "Development"
     Kafka__BootstrapServers: "kafka:9092"
     TCP__Port: ${TCP_PORT}
   networks:
     - mynetwork
networks:
 mynetwork:
   driver: bridge
volumes:
 mongodb_data: